#include <iostream>
#include <vector>
#include <queue>
using namespace std;

vector<bool> exist; //esta[i] = true -> el nodo "i" esta en la ruta final
vector<vector<pair<int, int>>> nodos;

int prim(int nodo)
{
  int aux=0;
  
  priority_queue<pair<int, int>> cola_np; // {-peso, nodo}
  
  cola_np.push({0, nodo});
  
  while(!cola_np.empty())
  {
    pair<int, int> arr=cola_np.top();
    cola_np.pop();
    
    if(exist[arr.second]==true)
      continue;
    cout<<"{"<<-arr.first<<", "<<arr.second<<"}"<<endl;
    exist[arr.second]=true;
    aux=aux-arr.first;
    
    for(int i=0; i<nodos[arr.second].size(); i++)
    
    {
      cola_np.push({-nodos[arr.second][i].second, nodos[arr.second][i].first});
    }
  }
  return aux;
}

//V cantidad de nodos
//E cantidad de aristas

//O(2*E(logE) + V)
//O(E(logE) + V)

int main() 
{
  int n, m; //n es numero de nodos. m es la cantidad de nodos
  cin >> n >> m;
  nodos.resize(n);
  exist.resize(n);
  
  for(int i =0; i<m; i++)
  {
    int a,b,c; //a, nodo origen. b, nodo destino. c, peso arista
    cin>>a>>b>>c;
    nodos[a].push_back({b,c});
    nodos[b].push_back({a,c});
  }
  
  cout<<prim(0)<<endl;
  return 0;
}
